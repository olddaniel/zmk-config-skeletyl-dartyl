#include "keys_pt_abnt2.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk {
    release-after-ms = <1500>;
    quick-release;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <20 10 30 31 32 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        cecedilha: cecedilha {
            compatible = "zmk,behavior-mod-morph";
            label = "CECEDILHA";
            bindings = <&kp C>, <&kp PT_C_CEDILLA>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        question_at: question_at {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_AT";
            bindings = <&kp PT_QUESTION>, <&kp PT_AT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp PT_DOT>, <&kp PT_COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        o_masculine_ordinal: o_masculine_ordinal {
            compatible = "zmk,behavior-mod-morph";
            label = "O_MASCULINE_ORDINAL";
            bindings = <&kp PT_O>, <&kp PT_MASCULINE_ORDINAL_INDICATOR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        control_A_feminine_ordinal: control_A_feminine_ordinal {
            compatible = "zmk,behavior-mod-morph";
            label = "CONTROL_A_FEMININE_ORDINAL";
            bindings =
                <&hm LEFT_CONTROL PT_A>,
                <&kp PT_FEMININE_ORDINAL_INDICATOR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            bindings = <&kp PT_COMMA>, <&kp PT_SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        P_percentage: P_percentage {
            compatible = "zmk,behavior-mod-morph";
            label = "P_PERCENTAGE";
            bindings = <&kp P>, <&kp PT_PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        B_Ampersand: B_Ampersand {
            compatible = "zmk,behavior-mod-morph";
            label = "B_AMPERSAND";
            bindings = <&kp B>, <&kp PT_AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        U_underscore: U_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "U_UNDERSCORE";
            bindings = <&kp U>, <&kp PT_UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        shift_C_Cecedilha: shift_C_Cecedilha {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_C_CECEDILHA";
            bindings = <&kp>, <&cecedilha>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        ultimate_shift: ultimate_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "ULTIMATE_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;
        };

        H_hashtag: H_hashtag {
            compatible = "zmk,behavior-mod-morph";
            label = "H_HASHTAG";
            bindings = <&kp H>, <&kp PT_HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        S_dollar: S_dollar {
            compatible = "zmk,behavior-mod-morph";
            label = "S_DOLLAR";
            bindings = <&kp S>, <&kp PT_DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        Apost_Pipe: Apost_Pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "APOST_PIPE";
            bindings = <&kp PT_APOS>, <&kp PT_PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        slash_comma: slash_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_COMMA";
            bindings = <&kp KP_SLASH>, <&kp KP_COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        zero_dot: zero_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_DOT";
            bindings = <&kp KP_NUMBER_0>, <&kp KP_DOT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <21 20>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <23 24>;
            layers = <0>;
        };

        to_layer1 {
            bindings = <&to 1>;
            key-positions = <31 33>;
            layers = <0>;
        };

        to_layer2 {
            bindings = <&to 2>;
            key-positions = <33 32>;
            layers = <0>;
        };

        back_to_base1 {
            bindings = <&to 0>;
            key-positions = <31 33>;
            layers = <1>;
        };

        back_to_base2 {
            bindings = <&to 0>;
            key-positions = <33 32>;
            layers = <2>;
        };

        ksc_the {
            bindings = <&m_ksc_the>;
            key-positions = <17 16 12>;
            layers = <0>;
        };

        ksc_the_space {
            bindings = <&m_ksc_the_space>;
            key-positions = <17 16 12 31>;
            layers = <0>;
        };

        ksc_ing_space {
            bindings = <&m_ksc_ing_space>;
            key-positions = <11 19 22>;
            layers = <0>;
        };

        ksc_th {
            bindings = <&m_ksc_th>;
            key-positions = <17 16>;
            layers = <0>;
        };

        ksc_ou {
            bindings = <&m_ksc_ou>;
            key-positions = <2 3>;
            layers = <0>;
        };

        ksc_gh {
            bindings = <&m_ksc_gh>;
            key-positions = <22 16>;
            layers = <0>;
        };

        ksc_wh {
            bindings = <&m_ksc_wh>;
            key-positions = <16 8>;
            layers = <0>;
        };

        ksc_sh {
            bindings = <&m_ksc_sh>;
            key-positions = <16 18>;
            layers = <0>;
        };

        ksc_men {
            bindings = <&m_ksc_men>;
            key-positions = <18 27 12>;
            layers = <0>;
        };

        ksc_ould {
            bindings = <&m_ksc_ould>;
            key-positions = <2 3 6 7>;
            layers = <0>;
        };

        ksc_ight {
            bindings = <&m_ksc_ight>;
            key-positions = <11 22 16 17>;
            layers = <0>;
        };

        ksc_with {
            bindings = <&m_ksc_with>;
            key-positions = <11 16 17 8>;
            layers = <0>;
        };

        ksc_atio {
            bindings = <&m_ksc_atio>;
            key-positions = <11 17 13 2>;
            layers = <0>;
        };

        ksc_tion {
            bindings = <&m_ksc_tion>;
            key-positions = <11 17 2 19>;
            layers = <0>;
        };

        ksc_ent {
            bindings = <&m_ksc_ent>;
            key-positions = <17 19 12>;
            layers = <0>;
        };

        ksc_and {
            bindings = <&m_ksc_and>;
            key-positions = <19 13 7>;
            layers = <0>;
        };

        ksc_st {
            bindings = <&m_ksc_st>;
            key-positions = <18 17>;
            layers = <0>;
        };

        ksc_in {
            bindings = <&m_ksc_in>;
            key-positions = <11 19>;
            layers = <0>;
        };

        ksc_enc {
            bindings = <&m_ksc_enc>;
            key-positions = <19 12 10>;
            layers = <0>;
        };

        ksc_for {
            bindings = <&m_ksc_for>;
            key-positions = <26 28 2>;
            layers = <0>;
        };

        ksc_tha {
            bindings = <&m_ksc_tha>;
            key-positions = <17 16 13>;
            layers = <0>;
        };

        ksc_thi {
            bindings = <&m_ksc_thi>;
            key-positions = <17 16 11>;
            layers = <0>;
        };

        ksc_ter {
            bindings = <&m_ksc_ter>;
            key-positions = <17 26 12>;
            layers = <0>;
        };

        ksc_ld {
            bindings = <&m_ksc_ld>;
            key-positions = <6 7>;
            layers = <0>;
        };

        ksc_download {
            bindings = <&m_ksc_download>;
            key-positions = <19 6 7 8>;
            layers = <0>;
        };

        ksc_cao {
            bindings = <&m_skc_cao>;
            key-positions = <10 2 13 11>;
            layers = <0>;
        };

        ksc_coes {
            bindings = <&m_ksc_coes>;
            key-positions = <10 11 2 18>;
            layers = <0>;
        };

        ksc_nao {
            bindings = <&m_ksc_nao>;
            key-positions = <2 19 13>;
            layers = <0>;
        };
    };

    macros {
        m_ksc_the: m_ksc_the {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E>;
            label = "M_KSC_THE";
        };

        m_ksc_the_space: m_ksc_the_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp SPACE>;
            label = "M_KSC_THE_SPACE";
        };

        m_ksc_ing_space: m_ksc_ing_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp G &kp SPACE>;
            label = "M_KSC_ING_SPACE";
        };

        m_ksc_th: m_ksc_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H>;
            label = "M_KSC_TH";
        };

        m_ksc_ou: m_ksc_ou {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U>;
            label = "M_KSC_OU";
        };

        m_ksc_gh: m_ksc_gh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp H>;
            label = "M_KSC_GH";
        };

        m_ksc_wh: m_ksc_wh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp H>;
            label = "M_KSC_WH";
        };

        m_ksc_sh: m_ksc_sh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H>;
            label = "M_KSC_SH";
        };

        m_ksc_men: m_ksc_men {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp E &kp N>;
            label = "M_KSC_MEN";
        };

        m_ksc_ould: m_ksc_ould {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U &kp L &kp D>;
            label = "M_KSC_OULD";
        };

        m_ksc_ight: m_ksc_ight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp G &kp H &kp T>;
            label = "M_KSC_IGHT";
        };

        m_ksc_with: m_ksc_with {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp I &kp T &kp H>;
            label = "M_KSC_WITH";
        };

        m_ksc_atio: m_ksc_atio {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp T &kp I &kp O>;
            label = "M_KSC_ATIO";
        };

        m_ksc_tion: m_ksc_tion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp O &kp N>;
            label = "M_KSC_TION";
        };

        m_ksc_ent: m_ksc_ent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N &kp T>;
            label = "M_KSC_ENT";
        };

        m_ksc_and: m_ksc_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp D>;
            label = "M_KSC_AND";
        };

        m_ksc_st: m_ksc_st {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T>;
            label = "M_KSC_ST";
        };

        m_ksc_in: m_ksc_in {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N>;
            label = "M_KSC_IN";
        };

        m_ksc_enc: m_ksc_enc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N &kp C>;
            label = "M_KSC_ENC";
        };

        m_ksc_for: m_ksc_for {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp R>;
            label = "M_KSC_FOR";
        };

        m_ksc_tha: m_ksc_tha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp A>;
            label = "M_KSC_THA";
        };

        m_ksc_thi: m_ksc_thi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp I>;
            label = "M_KSC_THI";
        };

        m_ksc_ter: m_ksc_ter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp R>;
            label = "M_KSC_TER";
        };

        m_ksc_ld: m_ksc_ld {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp D>;
            label = "M_KSC_LD";
        };

        m_ksc_download: m_ksc_download {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp W &kp N &kp L &kp O &kp A &kp D>;
            label = "M_KSC_DOWNLOAD";
        };

        m_skc_cao: m_skc_cao {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PT_C_CEDILLA &kp A &kp O &kp SPACE>;
            label = "M_SKC_CAO";
        };

        m_ksc_coes: m_ksc_coes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PT_C_CEDILLA &kp O &kp E &kp S &kp SPACE>;
            label = "M_KSC_COES";
        };

        m_ksc_nao: m_ksc_nao {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp A &kp O>;
            label = "M_KSC_NAO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&B_Ampersand                     &kp Y           &o_masculine_ordinal  &U_underscore                &Apost_Pipe    &question_at  &kp L            &kp D     &kp W      &kp J
&shift_C_Cecedilha LEFT_SHIFT 0  &hm LEFT_ALT I  &hm LEFT_COMMAND E    &control_A_feminine_ordinal  &comma_semi    &dot_colon    &H_hashtag       &kp T     &S_dollar  &kp N
&kp V                            &kp X           &kp G                 &kp K                        &kp Z          &kp Q         &kp R            &kp M     &kp F      &P_percentage
                                                 &backspace_delete     &lt 1 SPACE                  &lt 2 TAB      &kp ENTER     &ultimate_shift  &kp RGUI
            >;

            label = "BASE";
        };

        Navigation {
            bindings = <
&kp F2     &kp LG(F)  &kp LS(LG(L))  &kp LA(DOT)  &kp LA(N4)    &trans  &kp HOME  &kp PG_UP  &kp PG_DN  &kp END
&trans     &trans     &trans         &trans       &kp LA(N3)    &trans  &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT
&kp LG(R)  &kp LG(N)  &kp LG(T)      &kp LG(W)    &kp LG(Q)     &trans  &trans    &trans     &trans     &trans
                      &trans         &trans       &trans        &trans  &trans    &trans
            >;
        };

        Math {
            bindings = <
&kp PT_LEFT_BRACKET     &kp PT_RIGHT_BRACKET   &kp PT_LEFT_PARENTHESIS    &kp PT_RIGHT_PARENTHESIS  &kp PT_EXCL         &trans     &kp PT_ACUTE  &kp PT_TILDE  &kp PT_CARET  &kp PT_GRAVE
&hm LEFT_SHIFT PT_PLUS  &hm LEFT_ALT PT_MINUS  &hm LEFT_COMMAND PT_EQUAL  &hm LEFT_CONTROL PT_STAR  &slash_comma        &zero_dot  &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_N4
&kp PT_LEFT_BRACE       &kp PT_RIGHT_BRACE     &kp PT_LESS_THAN           &kp PT_GREATER_THAN       &kp PT_BACKSLASH    &kp KP_N5  &kp KP_N6     &kp KP_N7     &kp KP_N8     &kp KP_N9
                                               &trans                     &trans                    &trans              &trans     &trans        &trans
            >;
        };
    };
};
